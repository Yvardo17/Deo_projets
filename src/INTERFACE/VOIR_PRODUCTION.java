/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package INTERFACE;

import BD.Connexion;
import CLASSESE.Productions;
import com.sun.java.swing.plaf.windows.WindowsScrollBarUI;
import java.awt.Color;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author KATALA
 */
public class VOIR_PRODUCTION extends javax.swing.JPanel {

    /**
     * Creates new form VOIR_PRODUCTION
     */
    Productions p = new Productions();
    MODIF_PRODUCTIONS MP = new MODIF_PRODUCTIONS();
    MENUS M = new MENUS();

    public VOIR_PRODUCTION() {
        initComponents();
        jScrollPane1.getHorizontalScrollBar().setUI(new WindowsScrollBarUI());
        jScrollPane1.getVerticalScrollBar().setUI(new WindowsScrollBarUI());
        jScrollPane1.getViewport().setBackground(Color.white);
        MATRICULE.setVisible(false);
        MATRICULE.setText(MENUS.vrai);

        if (MENUS.grades.equals("analyste")) {
            p.remplir(Table, "SELECT * FROM production where matricule='" + MENUS.vrai + "'");
        } else {
            p.remplir(Table, "SELECT * FROM production");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        recherche = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new rojerusan.RSTableMetro();
        kButton11 = new keeptoo.KButton();
        kButton12 = new keeptoo.KButton();
        kButton13 = new keeptoo.KButton();
        MATRICULE = new javax.swing.JTextField();
        Annee = new javax.swing.JTextField();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(0, 26, 83));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("LISTE DES PRODUCTIONS");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
        );

        recherche.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        recherche.setForeground(new java.awt.Color(102, 102, 102));
        recherche.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        recherche.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                rechercheCaretUpdate(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(0, 102, 0));
        jLabel2.setText("RECHERCHER PAR :");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICONES/icons8_update.png"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Titre 1", "Titre 2", "Titre 3", "Titre 4", "Titre 5", "Titre 6"
            }
        ));
        Table.setAltoHead(30);
        Table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        Table.setColorBackgoundHead(new java.awt.Color(0, 26, 83));
        Table.setColorBordeHead(new java.awt.Color(0, 176, 80));
        Table.setColorFilasBackgound2(new java.awt.Color(238, 238, 238));
        Table.setColorFilasForeground1(new java.awt.Color(0, 0, 0));
        Table.setColorFilasForeground2(new java.awt.Color(0, 0, 0));
        Table.setColorSelBackgound(new java.awt.Color(0, 176, 80));
        Table.setFocusable(false);
        Table.setGrosorBordeFilas(0);
        Table.setGrosorBordeHead(0);
        Table.setIntercellSpacing(new java.awt.Dimension(0, 0));
        Table.setMultipleSeleccion(false);
        Table.setRowHeight(20);
        Table.setShowHorizontalLines(false);
        Table.setShowVerticalLines(false);
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Table);

        kButton11.setText("IMPRIMER TOUT");
        kButton11.setBorderPainted(false);
        kButton11.setkAllowGradient(false);
        kButton11.setkAllowTab(false);
        kButton11.setkBackGroundColor(new java.awt.Color(0, 26, 83));
        kButton11.setkBorderRadius(15);
        kButton11.setkHoverColor(new java.awt.Color(102, 102, 102));
        kButton11.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        kButton11.setkPressedColor(new java.awt.Color(0, 176, 80));
        kButton11.setkSelectedColor(new java.awt.Color(0, 176, 80));
        kButton11.setOpaque(false);
        kButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton11ActionPerformed(evt);
            }
        });

        kButton12.setText("IMPRIMER UN CENTRE");
        kButton12.setBorderPainted(false);
        kButton12.setkAllowGradient(false);
        kButton12.setkAllowTab(false);
        kButton12.setkBackGroundColor(new java.awt.Color(0, 26, 83));
        kButton12.setkBorderRadius(15);
        kButton12.setkHoverColor(new java.awt.Color(102, 102, 102));
        kButton12.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        kButton12.setkPressedColor(new java.awt.Color(0, 176, 80));
        kButton12.setkSelectedColor(new java.awt.Color(0, 176, 80));
        kButton12.setOpaque(false);
        kButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton12ActionPerformed(evt);
            }
        });

        kButton13.setText("IMPRIMER UN MOIS");
        kButton13.setBorderPainted(false);
        kButton13.setkAllowGradient(false);
        kButton13.setkAllowTab(false);
        kButton13.setkBackGroundColor(new java.awt.Color(0, 26, 83));
        kButton13.setkBorderRadius(15);
        kButton13.setkHoverColor(new java.awt.Color(102, 102, 102));
        kButton13.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        kButton13.setkPressedColor(new java.awt.Color(0, 176, 80));
        kButton13.setkSelectedColor(new java.awt.Color(0, 176, 80));
        kButton13.setOpaque(false);
        kButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton13ActionPerformed(evt);
            }
        });

        Annee.setForeground(new java.awt.Color(0, 26, 83));
        Annee.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)), "ANNEE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 26, 83))); // NOI18N
        Annee.setOpaque(false);
        Annee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AnneeMouseClicked(evt);
            }
        });
        Annee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnneeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(kButton11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(kButton12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(kButton13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MATRICULE, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Annee, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(recherche, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(recherche)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(kButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(kButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(kButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(MATRICULE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Annee, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void rechercheCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_rechercheCaretUpdate
        // TODO add your handling code here:
        //        ex.remplir(Table, "SELECT * FROM examautres where id_examAutres like '%" + recherche.getText() + "%'");
    }//GEN-LAST:event_rechercheCaretUpdate

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        if (MENUS.grades.equals("analyste")) {
            p.remplir(Table, "SELECT * FROM production where matricule='" + MENUS.vrai + "'");
        } else {
            p.remplir(Table, "SELECT * FROM production");
        }
    }//GEN-LAST:event_jLabel3MouseClicked

    private void TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableMouseClicked
        // TODO add your handling code here:
        try {

            MP.setVisible(true);
            int ligne = Table.getSelectedRow();

            MP.num.setText(Table.getValueAt(ligne, 0).toString());
            MP.num1.setText(Table.getValueAt(ligne, 1).toString());
            MP.num10.setText(Table.getValueAt(ligne, 2).toString());
            MP.num2.setText(Table.getValueAt(ligne, 3).toString());
            MP.num3.setText(Table.getValueAt(ligne, 4).toString());
            MP.num8.setText(Table.getValueAt(ligne, 5).toString());
            MP.num7.setText(Table.getValueAt(ligne, 6).toString());
            MP.num6.setText(Table.getValueAt(ligne, 7).toString());
            MP.num5.setText(Table.getValueAt(ligne, 8).toString());
            MP.num12.setText(Table.getValueAt(ligne, 9).toString());
            MP.num11.setText(Table.getValueAt(ligne, 10).toString());
            MP.num14.setText(Table.getValueAt(ligne, 11).toString());
            MP.num13.setText(Table.getValueAt(ligne, 12).toString());
            MP.num18.setText(Table.getValueAt(ligne, 13).toString());
            MP.num17.setText(Table.getValueAt(ligne, 14).toString());
            MP.num16.setText(Table.getValueAt(ligne, 15).toString());
            MP.num15.setText(Table.getValueAt(ligne, 16).toString());
            MP.num22.setText(Table.getValueAt(ligne, 17).toString());
            MP.num21.setText(Table.getValueAt(ligne, 18).toString());
            MP.num20.setText(Table.getValueAt(ligne, 19).toString());
            MP.num19.setText(Table.getValueAt(ligne, 20).toString());
            MP.num26.setText(Table.getValueAt(ligne, 21).toString());
            MP.num25.setText(Table.getValueAt(ligne, 22).toString());
            MP.num24.setText(Table.getValueAt(ligne, 23).toString());
            MP.num23.setText(Table.getValueAt(ligne, 24).toString());
            MP.num30.setText(Table.getValueAt(ligne, 25).toString());
            MP.num29.setText(Table.getValueAt(ligne, 26).toString());
            MP.num28.setText(Table.getValueAt(ligne, 27).toString());
            MP.num27.setText(Table.getValueAt(ligne, 28).toString());
            MP.num34.setText(Table.getValueAt(ligne, 29).toString());
            MP.num33.setText(Table.getValueAt(ligne, 30).toString());
            MP.num32.setText(Table.getValueAt(ligne, 31).toString());
            MP.num31.setText(Table.getValueAt(ligne, 32).toString());
            MP.num37.setText(Table.getValueAt(ligne, 33).toString());
            MP.mois.setSelectedItem(Table.getValueAt(ligne, 34).toString());
            MP.Annee.setText(Table.getValueAt(ligne, 35).toString());
            MP.centreGestion.setSelectedItem(Table.getValueAt(ligne, 36).toString());

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erreur de retoure : " + e.getMessage());
        }
    }//GEN-LAST:event_TableMouseClicked

    private void kButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton11ActionPerformed
        // TODO add your handling code here:
        try {
            if (MENUS.grades.equals("analyste")) {
                String query = "SELECT c.nom,\n"
                        + "	p.DotationProduction,\n"
                        + "    p.ProductionRealisee,\n"
                        + "    p.DeclarationsOrdinairesDC,\n"
                        + "    p.DeclarationsComplementairesDCC,\n"
                        + "    p.MajorationRetardMO,\n"
                        + "    p.TaxationOfficeTO,\n"
                        + "    p.ImpayesCotisationsExerciceCours,\n"
                        + "    p.ArrieresCotisationsExercicesAnte,\n"
                        + "    p.mois,\n"
                        + "    p.annee\n"
                        + "FROM production AS p\n"
                        + "INNER JOIN centre_gestion AS c ON c.Code_centre=p.Code_centre\n"
                        + "WHERE p.annee='" + Annee.getText() + "' AND p.Matricule='" + MATRICULE.getText() + "'\n"
                        + "ORDER BY c.nom";

                JasperDesign jd = JRXmlLoader.load("src\\ETATRAPPORT\\PRODUCTIONTOUSMAT.jrxml");
                JRDesignQuery querynew = new JRDesignQuery();
                querynew.setText(query);
                jd.setQuery(querynew);
                JasperReport rapport = JasperCompileManager.compileReport(jd);
                JasperPrint jp = JasperFillManager.fillReport(rapport, null, new Connexion().con());
                JasperViewer.viewReport(jp, false);

            } else {

                JasperDesign jd = JRXmlLoader.load("src\\ETATRAPPORT\\PRODUCTIONTOUS1.jrxml");
                JasperReport rapport = JasperCompileManager.compileReport(jd);
                String valeur = Annee.getText() + "%";
                Map param = new HashMap();
                param.put("ID", valeur);
                JasperPrint jp = JasperFillManager.fillReport(rapport, param, new Connexion().con());
                JasperViewer.viewReport(jp, false);
            }

        } catch (JRException ex) {
            Logger.getLogger(VOIR_PRODUCTION.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_kButton11ActionPerformed

    private void kButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton12ActionPerformed
        // TODO add your handling code here:
        try {
            if (MENUS.grades.equals("analyste")) {
                String query = "SELECT c.Code_centre, \n"
                        + "	c.nom,\n"
                        + "	p.DotationProduction,\n"
                        + "    p.ProductionRealisee,\n"
                        + "    p.DeclarationsOrdinairesDC,\n"
                        + "    p.DeclarationsComplementairesDCC,\n"
                        + "    p.MajorationRetardMO,\n"
                        + "    p.TaxationOfficeTO,\n"
                        + "    p.ImpayesCotisationsExerciceCours,\n"
                        + "    p.ArrieresCotisationsExercicesAnte,\n"
                        + "    p.mois,\n"
                        + "    p.annee\n"
                        + "FROM production AS p\n"
                        + "INNER JOIN centre_gestion AS c ON c.Code_centre=p.Code_centre\n"
                        + "WHERE p.annee='" + Annee.getText() + "' AND c.Code_centre='" + recherche.getText() + "' AND p.Matricule='" + MATRICULE.getText() + "'\n"
                        + "ORDER BY c.nom";

                JasperDesign jd = JRXmlLoader.load("src\\ETATRAPPORT\\PRODUCTIONCENTREMAT.jrxml");
                JRDesignQuery querynew = new JRDesignQuery();
                querynew.setText(query);
                jd.setQuery(querynew);
                JasperReport rapport = JasperCompileManager.compileReport(jd);
                JasperPrint jp = JasperFillManager.fillReport(rapport, null, new Connexion().con());
                JasperViewer.viewReport(jp, false);

            } else {

                String query = "SELECT c.Code_centre, \n"
                        + "	c.nom,\n"
                        + "	p.DotationProduction,\n"
                        + "    p.ProductionRealisee,\n"
                        + "    p.DeclarationsOrdinairesDC,\n"
                        + "    p.DeclarationsComplementairesDCC,\n"
                        + "    p.MajorationRetardMO,\n"
                        + "    p.TaxationOfficeTO,\n"
                        + "    p.ImpayesCotisationsExerciceCours,\n"
                        + "    p.ArrieresCotisationsExercicesAnte,\n"
                        + "    p.mois,\n"
                        + "    p.annee\n"
                        + "FROM production AS p\n"
                        + "INNER JOIN centre_gestion AS c ON c.Code_centre=p.Code_centre\n"
                        + "WHERE p.annee='" + Annee.getText() + "' AND c.Code_centre='" + recherche.getText() + "'\n"
                        + "ORDER BY c.nom";

                JasperDesign jd = JRXmlLoader.load("src\\ETATRAPPORT\\PRODUCTIONCENTRE.jrxml");
                JRDesignQuery querynew = new JRDesignQuery();
                querynew.setText(query);
                jd.setQuery(querynew);
                JasperReport rapport = JasperCompileManager.compileReport(jd);
                JasperPrint jp = JasperFillManager.fillReport(rapport, null, new Connexion().con());
                JasperViewer.viewReport(jp, false);
            }

        } catch (JRException ex) {
            Logger.getLogger(VOIR_PRODUCTION.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_kButton12ActionPerformed

    private void kButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton13ActionPerformed
        // TODO add your handling code here:
        try {
            if (MENUS.grades.equals("analyste")) {
                String query = "SELECT \n"
                        + "	c.nom,\n"
                        + "	p.DotationProduction,\n"
                        + "    p.ProductionRealisee,\n"
                        + "    p.DeclarationsOrdinairesDC,\n"
                        + "    p.DeclarationsComplementairesDCC,\n"
                        + "    p.MajorationRetardMO,\n"
                        + "    p.TaxationOfficeTO,\n"
                        + "    p.ImpayesCotisationsExerciceCours,\n"
                        + "    p.ArrieresCotisationsExercicesAnte,\n"
                        + "    p.mois,\n"
                        + "    p.annee\n"
                        + "FROM production AS p\n"
                        + "INNER JOIN centre_gestion AS c ON c.Code_centre=p.Code_centre\n"
                        + "WHERE p.annee='" + Annee.getText() + "' AND p.mois='" + recherche.getText() + "' AND p.Matricule='" + MATRICULE.getText() + "'\n"
                        + "ORDER BY c.nom";

                JasperDesign jd = JRXmlLoader.load("src\\ETATRAPPORT\\PRODUCTIONMOISMAT.jrxml");
                JRDesignQuery querynew = new JRDesignQuery();
                querynew.setText(query);
                jd.setQuery(querynew);
                JasperReport rapport = JasperCompileManager.compileReport(jd);
                JasperPrint jp = JasperFillManager.fillReport(rapport, null, new Connexion().con());
                JasperViewer.viewReport(jp, false);

            } else {
                String query = "SELECT \n"
                        + "	c.nom,\n"
                        + "	p.DotationProduction,\n"
                        + "    p.ProductionRealisee,\n"
                        + "    p.DeclarationsOrdinairesDC,\n"
                        + "    p.DeclarationsComplementairesDCC,\n"
                        + "    p.MajorationRetardMO,\n"
                        + "    p.TaxationOfficeTO,\n"
                        + "    p.ImpayesCotisationsExerciceCours,\n"
                        + "    p.ArrieresCotisationsExercicesAnte,\n"
                        + "    p.mois,\n"
                        + "    p.annee\n"
                        + "FROM production AS p\n"
                        + "INNER JOIN centre_gestion AS c ON c.Code_centre=p.Code_centre\n"
                        + "WHERE p.annee='" + Annee.getText() + "' AND p.mois='" + recherche.getText() + "'\n"
                        + "ORDER BY c.nom";

                JasperDesign jd = JRXmlLoader.load("src\\ETATRAPPORT\\PRODUCTIONMOIS.jrxml");
                JRDesignQuery querynew = new JRDesignQuery();
                querynew.setText(query);
                jd.setQuery(querynew);
                JasperReport rapport = JasperCompileManager.compileReport(jd);
                JasperPrint jp = JasperFillManager.fillReport(rapport, null, new Connexion().con());
                JasperViewer.viewReport(jp, false);
            }

        } catch (JRException ex) {
            Logger.getLogger(VOIR_PRODUCTION.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_kButton13ActionPerformed

    private void AnneeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AnneeMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_AnneeMouseClicked

    private void AnneeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnneeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AnneeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Annee;
    private javax.swing.JTextField MATRICULE;
    public rojerusan.RSTableMetro Table;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private keeptoo.KButton kButton11;
    private keeptoo.KButton kButton12;
    private keeptoo.KButton kButton13;
    private javax.swing.JTextField recherche;
    // End of variables declaration//GEN-END:variables
}

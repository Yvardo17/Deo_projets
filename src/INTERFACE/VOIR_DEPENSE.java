/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package INTERFACE;

import BD.Connexion;
import CLASSESE.Depenses;
import com.sun.java.swing.plaf.windows.WindowsScrollBarUI;
import java.awt.Color;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author KATALA
 */
public class VOIR_DEPENSE extends javax.swing.JPanel {

    /**
     * Creates new form VOIR_DEPENSE
     */
    Depenses d = new Depenses();
    MODIF_DEPENSE MD = new MODIF_DEPENSE();

    public VOIR_DEPENSE() {
        initComponents();
        jScrollPane1.getHorizontalScrollBar().setUI(new WindowsScrollBarUI());
        jScrollPane1.getVerticalScrollBar().setUI(new WindowsScrollBarUI());
        jScrollPane1.getViewport().setBackground(Color.white);
        MATRICULE.setVisible(false);
        MATRICULE.setText(MENUS.vrai);

        if (MENUS.grades.equals("analyste")) {
            d.remplir(Table, "SELECT * FROM depense where matricule='" + MENUS.vrai + "'");
        } else {
            d.remplir(Table, "SELECT * FROM depense");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new rojerusan.RSTableMetro();
        recherche = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        kButton11 = new keeptoo.KButton();
        kButton12 = new keeptoo.KButton();
        kButton13 = new keeptoo.KButton();
        MATRICULE = new javax.swing.JTextField();
        Annee = new javax.swing.JTextField();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(0, 26, 83));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("LISTE DES DEPENSES");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(1064, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
        );

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Titre 1", "Titre 2", "Titre 3", "Titre 4", "Titre 5", "Titre 6"
            }
        ));
        Table.setAltoHead(30);
        Table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        Table.setColorBackgoundHead(new java.awt.Color(0, 26, 83));
        Table.setColorBordeHead(new java.awt.Color(0, 176, 80));
        Table.setColorFilasBackgound2(new java.awt.Color(238, 238, 238));
        Table.setColorFilasForeground1(new java.awt.Color(0, 0, 0));
        Table.setColorFilasForeground2(new java.awt.Color(0, 0, 0));
        Table.setColorSelBackgound(new java.awt.Color(0, 176, 80));
        Table.setFocusable(false);
        Table.setGrosorBordeFilas(0);
        Table.setGrosorBordeHead(0);
        Table.setIntercellSpacing(new java.awt.Dimension(0, 0));
        Table.setMultipleSeleccion(false);
        Table.setRowHeight(20);
        Table.setShowHorizontalLines(false);
        Table.setShowVerticalLines(false);
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Table);

        recherche.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        recherche.setForeground(new java.awt.Color(102, 102, 102));
        recherche.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        recherche.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                rechercheCaretUpdate(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(0, 102, 0));
        jLabel2.setText("RECHERCHER PAR :");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICONES/icons8_update.png"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        kButton11.setText("IMPRIMER TOUT");
        kButton11.setBorderPainted(false);
        kButton11.setkAllowGradient(false);
        kButton11.setkAllowTab(false);
        kButton11.setkBackGroundColor(new java.awt.Color(0, 26, 83));
        kButton11.setkBorderRadius(15);
        kButton11.setkHoverColor(new java.awt.Color(102, 102, 102));
        kButton11.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        kButton11.setkPressedColor(new java.awt.Color(0, 176, 80));
        kButton11.setkSelectedColor(new java.awt.Color(0, 176, 80));
        kButton11.setOpaque(false);
        kButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton11ActionPerformed(evt);
            }
        });

        kButton12.setText("IMPRIMER UN CENTRE");
        kButton12.setBorderPainted(false);
        kButton12.setkAllowGradient(false);
        kButton12.setkAllowTab(false);
        kButton12.setkBackGroundColor(new java.awt.Color(0, 26, 83));
        kButton12.setkBorderRadius(15);
        kButton12.setkHoverColor(new java.awt.Color(102, 102, 102));
        kButton12.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        kButton12.setkPressedColor(new java.awt.Color(0, 176, 80));
        kButton12.setkSelectedColor(new java.awt.Color(0, 176, 80));
        kButton12.setOpaque(false);
        kButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton12ActionPerformed(evt);
            }
        });

        kButton13.setText("IMPRIMER UN MOIS");
        kButton13.setBorderPainted(false);
        kButton13.setkAllowGradient(false);
        kButton13.setkAllowTab(false);
        kButton13.setkBackGroundColor(new java.awt.Color(0, 26, 83));
        kButton13.setkBorderRadius(15);
        kButton13.setkHoverColor(new java.awt.Color(102, 102, 102));
        kButton13.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        kButton13.setkPressedColor(new java.awt.Color(0, 176, 80));
        kButton13.setkSelectedColor(new java.awt.Color(0, 176, 80));
        kButton13.setOpaque(false);
        kButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton13ActionPerformed(evt);
            }
        });

        Annee.setForeground(new java.awt.Color(0, 26, 83));
        Annee.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)), "ANNEE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 26, 83))); // NOI18N
        Annee.setOpaque(false);
        Annee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AnneeMouseClicked(evt);
            }
        });
        Annee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnneeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1247, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(kButton11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(kButton12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(kButton13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(MATRICULE, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Annee, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(recherche, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(recherche)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(kButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(kButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(kButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MATRICULE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(Annee, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 519, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableMouseClicked
        // TODO add your handling code here:
        try {
            MD.setVisible(true);
            int ligne = Table.getSelectedRow();
            
            MD.EMPLOYEYRFICHER40.setText(Table.getValueAt(ligne,0).toString());
            MD.EMPLOYEYRFICHER.setText(Table.getValueAt(ligne,1).toString());
            MD.EMPLOYEYRFICHER1.setText(Table.getValueAt(ligne,2).toString());
            MD.EMPLOYEYRFICHER2.setText(Table.getValueAt(ligne,3).toString());
            MD.EMPLOYEYRFICHER3.setText(Table.getValueAt(ligne,4).toString());
            MD.EMPLOYEYRFICHER4.setText(Table.getValueAt(ligne,5).toString());
            MD.EMPLOYEYRFICHER5.setText(Table.getValueAt(ligne,6).toString());
            MD.EMPLOYEYRFICHER6.setText(Table.getValueAt(ligne,7).toString());
            MD.EMPLOYEYRFICHER7.setText(Table.getValueAt(ligne,8).toString());
            MD.EMPLOYEYRFICHER8.setText(Table.getValueAt(ligne,9).toString());
            MD.EMPLOYEYRFICHER9.setText(Table.getValueAt(ligne,10).toString());
            MD.EMPLOYEYRFICHER11.setText(Table.getValueAt(ligne,11).toString());
            MD.EMPLOYEYRFICHER12.setText(Table.getValueAt(ligne,12).toString());
            MD.EMPLOYEYRFICHER13.setText(Table.getValueAt(ligne,13).toString());
            MD.EMPLOYEYRFICHER14.setText(Table.getValueAt(ligne,14).toString());
            MD.EMPLOYEYRFICHER15.setText(Table.getValueAt(ligne,15).toString());
            MD.EMPLOYEYRFICHER16.setText(Table.getValueAt(ligne,16).toString());
            MD.EMPLOYEYRFICHER17.setText(Table.getValueAt(ligne,17).toString());
            MD.EMPLOYEYRFICHER18.setText(Table.getValueAt(ligne,18).toString());
            MD.EMPLOYEYRFICHER19.setText(Table.getValueAt(ligne,19).toString());
            MD.EMPLOYEYRFICHER10.setText(Table.getValueAt(ligne,20).toString());
            MD.EMPLOYEYRFICHER21.setText(Table.getValueAt(ligne,21).toString());
            MD.EMPLOYEYRFICHER22.setText(Table.getValueAt(ligne,22).toString());
            MD.EMPLOYEYRFICHER23.setText(Table.getValueAt(ligne,23).toString());
            MD.EMPLOYEYRFICHER24.setText(Table.getValueAt(ligne,24).toString());
            MD.EMPLOYEYRFICHER25.setText(Table.getValueAt(ligne,25).toString());
            MD.EMPLOYEYRFICHER26.setText(Table.getValueAt(ligne,26).toString());
            MD.EMPLOYEYRFICHER27.setText(Table.getValueAt(ligne,27).toString());
            MD.EMPLOYEYRFICHER28.setText(Table.getValueAt(ligne,28).toString());
            MD.EMPLOYEYRFICHER29.setText(Table.getValueAt(ligne,29).toString());
            MD.EMPLOYEYRFICHER20.setText(Table.getValueAt(ligne,30).toString());
            MD.EMPLOYEYRFICHER31.setText(Table.getValueAt(ligne,31).toString());
            MD.EMPLOYEYRFICHER32.setText(Table.getValueAt(ligne,32).toString());
            MD.EMPLOYEYRFICHER33.setText(Table.getValueAt(ligne,33).toString());
            MD.EMPLOYEYRFICHER34.setText(Table.getValueAt(ligne,34).toString());
            MD.EMPLOYEYRFICHER35.setText(Table.getValueAt(ligne,35).toString());
            MD.EMPLOYEYRFICHER36.setText(Table.getValueAt(ligne,36).toString());
            MD.EMPLOYEYRFICHER37.setText(Table.getValueAt(ligne,37).toString());
            MD.EMPLOYEYRFICHER38.setText(Table.getValueAt(ligne,38).toString());
            MD.EMPLOYEYRFICHER39.setText(Table.getValueAt(ligne,39).toString());
            MD.EMPLOYEYRFICHER30.setText(Table.getValueAt(ligne,40).toString());
            MD.EMPLOYEYRFICHER41.setText(Table.getValueAt(ligne,41).toString());
            MD.EMPLOYEYRFICHER42.setText(Table.getValueAt(ligne,42).toString());
            MD.EMPLOYEYRFICHER43.setText(Table.getValueAt(ligne,43).toString());
            MD.EMPLOYEYRFICHER44.setText(Table.getValueAt(ligne,44).toString());
            MD.EMPLOYEYRFICHER45.setText(Table.getValueAt(ligne,45).toString());
            MD.EMPLOYEYRFICHER46.setText(Table.getValueAt(ligne,46).toString());
            MD.Depenses_Autres_Gestions_Investissements.setText(Table.getValueAt(ligne,47).toString());
            MD.total_depense.setText(Table.getValueAt(ligne,48).toString());
            MD.moisCB.setSelectedItem(Table.getValueAt(ligne,49).toString());
            MD.Annee.setText(Table.getValueAt(ligne,50).toString());
            MD.centreGestion.setSelectedItem(Table.getValueAt(ligne,51).toString());
            //MD.num54.setText(Table.getValueAt(ligne,52).toString());

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erreur de retoure : " + e.getMessage());
        }
    }//GEN-LAST:event_TableMouseClicked

    private void rechercheCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_rechercheCaretUpdate
        // TODO add your handling code here:
        //        ex.remplir(Table, "SELECT * FROM examautres where id_examAutres like '%" + recherche.getText() + "%'");
    }//GEN-LAST:event_rechercheCaretUpdate

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        if (MENUS.grades.equals("analyste")) {
            d.remplir(Table, "SELECT * FROM depense where matricule='" + MENUS.vrai + "'");
        } else {
            d.remplir(Table, "SELECT * FROM depense");
        }
    }//GEN-LAST:event_jLabel3MouseClicked

    private void kButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton11ActionPerformed
        // TODO add your handling code here:
        try {
            if (MENUS.grades.equals("analyste")) {

                String query = "SELECT c.nom,\n"
                        + "	d.Dot_Depenses,\n"
                        + "	d.Depenses_Gestion_Budgetaire,\n"
                        + "    d.Depenses_Gestion_Technique,\n"
                        + "    d.BranchePF,\n"
                        + "    d.BrancheATMP,\n"
                        + "    d.BranchePVID,\n"
                        + "    d.Depenses_Autres_Gestions_Investissements,\n"
                        + "    d.Total_Depenses_engages,\n"
                        + "    d.mois,\n"
                        + "    d.annee\n"
                        + "FROM depense AS d\n"
                        + "INNER JOIN centre_gestion AS c ON c.Code_centre=d.Code_centre\n"
                        + "WHERE d.annee='" + Annee.getText() + "' AND d.Matricule='" + MATRICULE.getText() + "'\n"
                        + "ORDER BY c.nom";

                JasperDesign jd = JRXmlLoader.load("src\\ETATRAPPORT\\DEPENSETOUSMAT.jrxml");
                JRDesignQuery querynew = new JRDesignQuery();
                querynew.setText(query);
                jd.setQuery(querynew);
                JasperReport rapport = JasperCompileManager.compileReport(jd);
                JasperPrint jp = JasperFillManager.fillReport(rapport, null, new Connexion().con());
                JasperViewer.viewReport(jp, false);

            } else {

                JasperDesign jd = JRXmlLoader.load("src\\ETATRAPPORT\\DEPENSETOUS.jrxml");
                JasperReport rapport = JasperCompileManager.compileReport(jd);
                String valeur = Annee.getText() + "%";
                Map param = new HashMap();
                param.put("ID", valeur);
                JasperPrint jp = JasperFillManager.fillReport(rapport, param, new Connexion().con());
                JasperViewer.viewReport(jp, false);
            }

        } catch (JRException ex) {
            Logger.getLogger(VOIR_DEPENSE.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_kButton11ActionPerformed

    private void kButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton12ActionPerformed
        // TODO add your handling code here:
        try {
            if (MENUS.grades.equals("analyste")) {

                String query = "SELECT c.Code_centre,\n"
                        + "	c.nom,\n"
                        + "	d.Dot_Depenses,\n"
                        + "	d.Depenses_Gestion_Budgetaire,\n"
                        + "    d.Depenses_Gestion_Technique,\n"
                        + "    d.BranchePF,\n"
                        + "    d.BrancheATMP,\n"
                        + "    d.BranchePVID,\n"
                        + "    d.Depenses_Autres_Gestions_Investissements,\n"
                        + "    d.Total_Depenses_engages,\n"
                        + "    d.mois,\n"
                        + "    d.annee\n"
                        + "FROM depense AS d\n"
                        + "INNER JOIN centre_gestion AS c ON c.Code_centre=d.Code_centre\n"
                        + "WHERE d.annee='" + Annee.getText() + "' AND d.Code_centre='" + recherche.getText() + "' AND d.Matricule='" + MATRICULE.getText() + "'\n"
                        + "ORDER BY c.nom";

                JasperDesign jd = JRXmlLoader.load("src\\ETATRAPPORT\\DEPENSECENTREMAT.jrxml");
                JRDesignQuery querynew = new JRDesignQuery();
                querynew.setText(query);
                jd.setQuery(querynew);
                JasperReport rapport = JasperCompileManager.compileReport(jd);
                JasperPrint jp = JasperFillManager.fillReport(rapport, null, new Connexion().con());
                JasperViewer.viewReport(jp, false);

            } else {

                String query = "SELECT c.Code_centre,\n"
                        + "	c.nom,\n"
                        + "	d.Dot_Depenses,\n"
                        + "	d.Depenses_Gestion_Budgetaire,\n"
                        + "    d.Depenses_Gestion_Technique,\n"
                        + "    d.BranchePF,\n"
                        + "    d.BrancheATMP,\n"
                        + "    d.BranchePVID,\n"
                        + "    d.Depenses_Autres_Gestions_Investissements,\n"
                        + "    d.Total_Depenses_engages,\n"
                        + "    d.mois,\n"
                        + "    d.annee\n"
                        + "FROM depense AS d\n"
                        + "INNER JOIN centre_gestion AS c ON c.Code_centre=d.Code_centre\n"
                        + "WHERE d.annee='" + Annee.getText() + "' AND d.Code_centre='" + recherche.getText() + "'\n"
                        + "ORDER BY c.nom";

                JasperDesign jd = JRXmlLoader.load("src\\ETATRAPPORT\\DEPENSECENTRE.jrxml");
                JRDesignQuery querynew = new JRDesignQuery();
                querynew.setText(query);
                jd.setQuery(querynew);
                JasperReport rapport = JasperCompileManager.compileReport(jd);
                JasperPrint jp = JasperFillManager.fillReport(rapport, null, new Connexion().con());
                JasperViewer.viewReport(jp, false);

            }

        } catch (JRException ex) {
            Logger.getLogger(VOIR_DEPENSE.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_kButton12ActionPerformed

    private void kButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton13ActionPerformed
        // TODO add your handling code here:
        try {
            if (MENUS.grades.equals("analyste")) {

                String query = "SELECT\n"
                        + "	c.nom,\n"
                        + "	d.Dot_Depenses,\n"
                        + "	d.Depenses_Gestion_Budgetaire,\n"
                        + "    d.Depenses_Gestion_Technique,\n"
                        + "    d.BranchePF,\n"
                        + "    d.BrancheATMP,\n"
                        + "    d.BranchePVID,\n"
                        + "    d.Depenses_Autres_Gestions_Investissements,\n"
                        + "    d.Total_Depenses_engages,\n"
                        + "    d.mois,\n"
                        + "    d.annee\n"
                        + "FROM depense AS d\n"
                        + "INNER JOIN centre_gestion AS c ON c.Code_centre=d.Code_centre\n"
                        + "WHERE d.annee='" + Annee.getText() + "' AND d.mois='" + recherche.getText() + "' AND d.Matricule='" + MATRICULE.getText() + "'\n"
                        + "ORDER BY c.nom";

                JasperDesign jd = JRXmlLoader.load("src\\ETATRAPPORT\\DEPENSEMOISMAT.jrxml");
                JRDesignQuery querynew = new JRDesignQuery();
                querynew.setText(query);
                jd.setQuery(querynew);
                JasperReport rapport = JasperCompileManager.compileReport(jd);
                JasperPrint jp = JasperFillManager.fillReport(rapport, null, new Connexion().con());
                JasperViewer.viewReport(jp, false);

            } else {

                String query = "SELECT\n"
                        + "	c.nom,\n"
                        + "	d.Dot_Depenses,\n"
                        + "	d.Depenses_Gestion_Budgetaire,\n"
                        + "    d.Depenses_Gestion_Technique,\n"
                        + "    d.BranchePF,\n"
                        + "    d.BrancheATMP,\n"
                        + "    d.BranchePVID,\n"
                        + "    d.Depenses_Autres_Gestions_Investissements,\n"
                        + "    d.Total_Depenses_engages,\n"
                        + "    d.mois,\n"
                        + "    d.annee\n"
                        + "FROM depense AS d\n"
                        + "INNER JOIN centre_gestion AS c ON c.Code_centre=d.Code_centre\n"
                        + "WHERE d.annee='" + Annee.getText() + "' AND d.mois='" + recherche.getText() + "'\n"
                        + "ORDER BY c.nom";

                JasperDesign jd = JRXmlLoader.load("src\\ETATRAPPORT\\DEPENSEMOIS.jrxml");
                JRDesignQuery querynew = new JRDesignQuery();
                querynew.setText(query);
                jd.setQuery(querynew);
                JasperReport rapport = JasperCompileManager.compileReport(jd);
                JasperPrint jp = JasperFillManager.fillReport(rapport, null, new Connexion().con());
                JasperViewer.viewReport(jp, false);

            }

        } catch (JRException ex) {
            Logger.getLogger(VOIR_DEPENSE.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_kButton13ActionPerformed

    private void AnneeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AnneeMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_AnneeMouseClicked

    private void AnneeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnneeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AnneeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Annee;
    private javax.swing.JTextField MATRICULE;
    public rojerusan.RSTableMetro Table;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private keeptoo.KButton kButton11;
    private keeptoo.KButton kButton12;
    private keeptoo.KButton kButton13;
    private javax.swing.JTextField recherche;
    // End of variables declaration//GEN-END:variables
}
